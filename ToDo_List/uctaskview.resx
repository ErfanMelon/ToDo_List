<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ttdetail.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="cmsrightclick.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 17</value>
  </metadata>
  <metadata name="ninotif.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>229, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ninotif.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>